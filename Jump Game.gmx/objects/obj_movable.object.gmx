<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_collidable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//BUG 
// lasthspd and hspd are both zero upon hitting a jumppad (wall)

facing_right = true;
collider_id = noone;
collider = obj_floor;

moving_block_flag_h = false;
moving_block_flag_v = false;

//This object will never actually be instantiated - it's just
//a parent for all objects which will use the custom movement
//system.

S_SLOPE_SLOW = 0.5;     //Slow down while climbing slopes
S_RUN_ACCEL = 0.1;
S_RUN_FRIC = 0.1;
S_AIR_ACCEL = 0.1;
S_AIR_FRIC = 0.1;

accel = 0;
fric = 0;

//This variables hold the actual speed the object is travelling at
hspd = 0;
vspd = 0;
lastvspd = 0;
lasthspd = 0;

//These variables have their respective speeds added to them at each
//step.  The object is moved based on these rounded, but the un-used
//fraction of a pixel is saved for next step, so objects with a
//speed less than 1 will still gradually move.
h_counter = 0;
v_counter = 0;

//This variables holds whether the object is sitting on solid ground.
on_ground = false;

// used in end step
h = 0;
v = 0;
slope = false;
collide = false;
sign_h = 1;
sign_v = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moving_block_flag_h = false;
moving_block_flag_v = false;

move_and_collide();
    
    // has to be in end step and i dunno why
// not precise enough for players but prolly good enough for others.
if (x-xprevious &gt; 0) { gaying_right = true; }
if (x-xprevious &lt; 0) { gaying_right = false; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>on_ground = check_below();
lastvspd = vspd;
lasthspd = hspd;

// i dunno maybe this is just plain wrong
if (x-xprevious &gt; 0) { facing_right = true; }
if (x-xprevious &lt; 0) { facing_right = false; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
